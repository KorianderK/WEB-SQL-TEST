{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\troll\\\\web-test-sql\\\\src\\\\Searchbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = ({\n  onSearch\n}) => {\n  _s();\n  const [purchaseId, setPurchaseId] = useState('');\n  const [matchedRecords, setMatchedRecords] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const handleSearch = () => {\n    onSearch(selectedOption.value);\n  };\n  const handleInputChange = inputValue => {\n    setPurchaseId(inputValue);\n  };\n  useEffect(() => {\n    const fetchMatchedRecords = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/cars?search=${purchaseId}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const data = await response.json();\n        setMatchedRecords(data.map(record => ({\n          value: record.purchase_id,\n          label: record.purchase_id\n        })));\n      } catch (error) {\n        console.error('Error fetching matched records:', error.message);\n        setMatchedRecords([]);\n      }\n    };\n\n    // Fetch only if the input value is not empty\n    if (purchaseId.trim() !== '') {\n      fetchMatchedRecords();\n    } else {\n      setMatchedRecords([]); // Clear matched records when the input is empty\n    }\n  }, [purchaseId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"purchaseId\",\n      children: \"Enter Purchase ID:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      id: \"purchaseId\",\n      value: selectedOption,\n      onChange: option => {\n        setSelectedOption(option);\n        handleSearch(); // Trigger search on option change\n      },\n      onInputChange: handleInputChange,\n      options: matchedRecords\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"Zvp8+hpJnnS/t07y5DQysJZvL8s=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","useEffect","Select","jsxDEV","_jsxDEV","SearchBar","onSearch","_s","purchaseId","setPurchaseId","matchedRecords","setMatchedRecords","selectedOption","setSelectedOption","handleSearch","value","handleInputChange","inputValue","fetchMatchedRecords","response","fetch","ok","Error","data","json","map","record","purchase_id","label","error","console","message","trim","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","option","onInputChange","options","_c","$RefreshReg$"],"sources":["C:/Users/troll/web-test-sql/src/Searchbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\n\r\nconst SearchBar = ({ onSearch }) => {\r\n  const [purchaseId, setPurchaseId] = useState('');\r\n  const [matchedRecords, setMatchedRecords] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  const handleSearch = () => {\r\n    onSearch(selectedOption.value);\r\n  };\r\n\r\n  const handleInputChange = (inputValue) => {\r\n    setPurchaseId(inputValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchMatchedRecords = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/cars?search=${purchaseId}`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch data');\r\n        }\r\n        const data = await response.json();\r\n        setMatchedRecords(data.map((record) => ({ value: record.purchase_id, label: record.purchase_id })));\r\n      } catch (error) {\r\n        console.error('Error fetching matched records:', error.message);\r\n        setMatchedRecords([]);\r\n      }\r\n    };\r\n  \r\n    // Fetch only if the input value is not empty\r\n    if (purchaseId.trim() !== '') {\r\n      fetchMatchedRecords();\r\n    } else {\r\n      setMatchedRecords([]); // Clear matched records when the input is empty\r\n    }\r\n  }, [purchaseId]);\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"purchaseId\">Enter Purchase ID:</label>\r\n      <Select\r\n        id=\"purchaseId\"\r\n        value={selectedOption}\r\n        onChange={(option) => {\r\n          setSelectedOption(option);\r\n          handleSearch(); // Trigger search on option change\r\n        }}\r\n        onInputChange={handleInputChange}\r\n        options={matchedRecords}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMc,YAAY,GAAGA,CAAA,KAAM;IACzBR,QAAQ,CAACM,cAAc,CAACG,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,iBAAiB,GAAIC,UAAU,IAAK;IACxCR,aAAa,CAACQ,UAAU,CAAC;EAC3B,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACd,MAAMiB,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,yCAAwCZ,UAAW,EAAC,CAAC;QACnF,IAAI,CAACW,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QACzC;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCb,iBAAiB,CAACY,IAAI,CAACE,GAAG,CAAEC,MAAM,KAAM;UAAEX,KAAK,EAAEW,MAAM,CAACC,WAAW;UAAEC,KAAK,EAAEF,MAAM,CAACC;QAAY,CAAC,CAAC,CAAC,CAAC;MACrG,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAACE,OAAO,CAAC;QAC/DpB,iBAAiB,CAAC,EAAE,CAAC;MACvB;IACF,CAAC;;IAED;IACA,IAAIH,UAAU,CAACwB,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC5Bd,mBAAmB,CAAC,CAAC;IACvB,CAAC,MAAM;MACLP,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC;IACzB;EACF,CAAC,EAAE,CAACH,UAAU,CAAC,CAAC;EAGhB,oBACEJ,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAO8B,OAAO,EAAC,YAAY;MAAAD,QAAA,EAAC;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACtDlC,OAAA,CAACF,MAAM;MACLqC,EAAE,EAAC,YAAY;MACfxB,KAAK,EAAEH,cAAe;MACtB4B,QAAQ,EAAGC,MAAM,IAAK;QACpB5B,iBAAiB,CAAC4B,MAAM,CAAC;QACzB3B,YAAY,CAAC,CAAC,CAAC,CAAC;MAClB,CAAE;MACF4B,aAAa,EAAE1B,iBAAkB;MACjC2B,OAAO,EAAEjC;IAAe;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC/B,EAAA,CApDIF,SAAS;AAAAuC,EAAA,GAATvC,SAAS;AAsDf,eAAeA,SAAS;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}